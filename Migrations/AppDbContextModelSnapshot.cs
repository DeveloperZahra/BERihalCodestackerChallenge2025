// <auto-generated />
using System;
using BERihalCodestackerChallenge2025.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BERihalCodestackerChallenge2025.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaCity")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("AuthorizationLevel")
                        .HasColumnType("int");

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("CaseType")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationLevel");

                    b.HasIndex("CaseNumber")
                        .IsUnique();

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("Status");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CaseAssignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssignedRole")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<int>("ProgressStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("CaseId", "UserId")
                        .IsUnique();

                    b.ToTable("CaseAssignees");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CaseParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("CaseId", "ParticipantId", "Role");

                    b.ToTable("CaseParticipants");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CaseReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LinkedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.HasIndex("CaseId", "ReportId")
                        .IsUnique();

                    b.ToTable("CaseReports");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CrimeReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaCity")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<DateTime>("ReportDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReportedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("ReportedByUserId");

                    b.HasIndex("Status");

                    b.HasIndex("TrackingCode")
                        .IsUnique();

                    b.ToTable("CrimeReports");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.Evidence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MimeType")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<long?>("SizeBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("TextContent")
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("CaseId", "IsSoftDeleted");

                    b.ToTable("Evidences", t =>
                        {
                            t.HasCheckConstraint("CK_Evidence_Content", "( [Type] = 0 AND [TextContent] IS NOT NULL AND [FileUrl] IS NULL ) OR ( [Type] = 1 AND [FileUrl] IS NOT NULL AND [TextContent] IS NULL )");
                        });
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.EvidenceAuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Details")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("EvidenceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActedByUserId");

                    b.HasIndex("EvidenceId");

                    b.ToTable("EvidenceAuditLogs");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("FullName");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClearanceLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.Case", b =>
                {
                    b.HasOne("BERihalCodestackerChallenge2025.Model.User", "CreatedByUser")
                        .WithMany("CreatedCases")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CaseAssignee", b =>
                {
                    b.HasOne("BERihalCodestackerChallenge2025.Model.Case", "Case")
                        .WithMany("Assignees")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BERihalCodestackerChallenge2025.Model.User", "User")
                        .WithMany("CaseAssignments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CaseParticipant", b =>
                {
                    b.HasOne("BERihalCodestackerChallenge2025.Model.User", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId");

                    b.HasOne("BERihalCodestackerChallenge2025.Model.Case", "Case")
                        .WithMany("Participants")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BERihalCodestackerChallenge2025.Model.Participant", "Participant")
                        .WithMany("CaseLinks")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddedByUser");

                    b.Navigation("Case");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CaseReport", b =>
                {
                    b.HasOne("BERihalCodestackerChallenge2025.Model.Case", "Case")
                        .WithMany("LinkedReports")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BERihalCodestackerChallenge2025.Model.CrimeReport", "Report")
                        .WithMany("CaseLinks")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CrimeReport", b =>
                {
                    b.HasOne("BERihalCodestackerChallenge2025.Model.User", "ReportedByUser")
                        .WithMany()
                        .HasForeignKey("ReportedByUserId");

                    b.Navigation("ReportedByUser");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.Evidence", b =>
                {
                    b.HasOne("BERihalCodestackerChallenge2025.Model.User", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BERihalCodestackerChallenge2025.Model.Case", "Case")
                        .WithMany("Evidences")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AddedByUser");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.EvidenceAuditLog", b =>
                {
                    b.HasOne("BERihalCodestackerChallenge2025.Model.User", "ActedByUser")
                        .WithMany()
                        .HasForeignKey("ActedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BERihalCodestackerChallenge2025.Model.Evidence", "Evidence")
                        .WithMany("Audit")
                        .HasForeignKey("EvidenceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActedByUser");

                    b.Navigation("Evidence");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.Case", b =>
                {
                    b.Navigation("Assignees");

                    b.Navigation("Evidences");

                    b.Navigation("LinkedReports");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.CrimeReport", b =>
                {
                    b.Navigation("CaseLinks");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.Evidence", b =>
                {
                    b.Navigation("Audit");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.Participant", b =>
                {
                    b.Navigation("CaseLinks");
                });

            modelBuilder.Entity("BERihalCodestackerChallenge2025.Model.User", b =>
                {
                    b.Navigation("CaseAssignments");

                    b.Navigation("CreatedCases");
                });
#pragma warning restore 612, 618
        }
    }
}
